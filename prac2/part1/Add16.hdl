// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/Add16.hdl

/**
 * Adds two 16-bit values.
 * If an overflow occurs (The most significant carry bit is 1), over is set to 1.
 */

CHIP Add16 {
    IN a[16], b[16];
    OUT out[16], over;

    PARTS:
   // Put you code here:
   
   HalfAdder(a=a[0], b=b[0], carry=carr1, sum=out[0]);
   // Or(a=sumout1, b=sumout1, out=out[15]);
   
   FullAdder(a=a[1], b=b[1], c=carr1, carry=carr2, sum=out[1]);
   //FullAdder(a=b[14], b=carr2, c=temp1, carry=carr3, sum=sumout2);
   //Or(a=sumout2, b=sumout2, out=out[14]);
   
   FullAdder(a=a[2], b=b[2], c=carr2, carry=carr3, sum=out[2]);
   //FullAdder(a=b[13], b=carr4, c=temp2, carry=carr5, sum=sumout3);
   //Or(a=sumout3, b=sumout3, out=out[13]);
   
   FullAdder(a=a[3], b=b[3], c=carr3, carry=carr4, sum=out[3]);
   //FullAdder(a=b[12], b=carr6, c=temp3, carry=carr7, sum=sumout4);
   //Or(a=sumout4, b=sumout4, out=out[12]);
   
   FullAdder(a=a[4], b=b[4], c=carr4, carry=carr5, sum=out[4]);
   //FullAdder(a=b[11], b=carr8, c=temp4, carry=carr9, sum=sumout5);
   //Or(a=sumout5, b=sumout5, out=out[11]);
   
   FullAdder(a=a[5], b=b[5], c=carr5, carry=carr6, sum=out[5]);
   //FullAdder(a=b[10], b=carr10, c=temp5, carry=carr11, sum=sumout6);
   //Or(a=sumout6, b=sumout6, out=out[10]);
   
   FullAdder(a=a[6], b=b[6], c=carr6, carry=carr7, sum=out[6]);
   //FullAdder(a=b[9], b=carr12, c=temp6, carry=carr13, sum=sumout7);
   //Or(a=sumout7, b=sumout7, out=out[9]);
   
   FullAdder(a=a[7], b=b[7], c=carr7, carry=carr8, sum=out[7]);
   //FullAdder(a=b[8], b=carr14, c=temp7, carry=carr15, sum=sumout8);
   //Or(a=sumout8, b=sumout8, out=out[8]);
   
   FullAdder(a=a[8], b=b[8], c=carr8, carry=carr9, sum=out[8]);
   //FullAdder(a=b[7], b=carr16, c=temp8, carry=carr17, sum=sumout9);
   //Or(a=sumout9, b=sumout9, out=out[7]);
   
   FullAdder(a=a[9], b=b[9], c=carr9, carry=carr10, sum=out[9]);
   //FullAdder(a=b[6], b=carr18, c=temp9, carry=carr19, sum=sumout10);
   // Or(a=sumout10, b=sumout10, out=out[6]);
   
   FullAdder(a=a[10], b=b[10], c=carr10, carry=carr11, sum=out[10]);
   //FullAdder(a=b[5], b=carr20, c=temp10, carry=carr21, sum=sumout11);
   //Or(a=sumout11, b=sumout11, out=out[5]);
   
   FullAdder(a=a[11], b=b[11], c=carr11, carry=carr12, sum=out[11]);
   //FullAdder(a=b[4], b=carr22, c=temp11, carry=carr23, sum=sumout12);
   //Or(a=sumout12, b=sumout12, out=out[4]);
   
   FullAdder(a=a[12], b=b[12], c=carr12, carry=carr13, sum=out[12]);
   //FullAdder(a=b[3], b=carr24, c=temp12, carry=carr25, sum=sumout13);
   //Or(a=sumout13, b=sumout13, out=out[3]);
   
   FullAdder(a=a[13], b=b[13], c=carr13, carry=carr14, sum=out[13]);
   //FullAdder(a=b[2], b=carr26, c=temp13, carry=carr27, sum=sumout14);
   //Or(a=sumout14, b=sumout14, out=out[2]);
   
   FullAdder(a=a[14], b=b[14], c=carr14, carry=carr15, sum=out[14]);
   //FullAdder(a=b[1], b=carr28, c=temp14, carry=carr29, sum=sumout15);
   //Or(a=sumout15, b=sumout15, out=out[1]);
   
   FullAdder(a=a[15], b=b[15], c=carr15, carry=noo, sum=outf);
   //FullAdder(a=b[0], b=carry30, c=sum30, carry=over, sum=out[0]);
   And(a=noo, b=noo, out=over); 
   And(a=outf, b=outf, out=out[15]);
   

}

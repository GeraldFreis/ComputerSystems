// Contains a function ArrMax.arrMax that finds and returns the largest element in the array a of length b.
// a & b are both supplied as arguments


// Put your code here.
function ArrMax.arrMax 2
// pushing my balss into your mouth
push argument 0
pop pointer 1



push constant 0
pop local 0 // local 0 acts as an index

push pointer 0 // setting the largest to be the first value (meaning we have O(n-1))
pop static 0



label LOOP
    // checking that we are still in range
    push local 0
    push argument 1
    sub // if this is >= 0 we go to END
    lt
    not // if not less than 0
    if-goto END

    // we are in range: getting the current element
    push pointer 0
    push static 0
    sub // this will be positive if the current element > current max
    gt
    if-goto ISGREATER

    // if less than we just increment
    push constant 1
    push pointer 0
    add
    pop pointer 1

    push local 0
    push constant 1
    add
    pop local 0
    goto LOOP

label ISGREATER
    push pointer 0
    pop static 0

    push constant 1
    push pointer 1
    add
    pop pointer 1

    push local 0
    push constant 1
    add
    pop local 0

    goto LOOP

label END
    goto END
